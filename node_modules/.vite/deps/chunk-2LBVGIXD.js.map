{
  "version": 3,
  "sources": ["../../@concordium/browser-wallet-api-helpers/lib/wallet-api-types.js", "../../@concordium/browser-wallet-api-helpers/lib/detector.js"],
  "sourcesContent": ["/**\n * An enumeration of the events that can be emitted by the WalletApi.\n */\nexport var EventType;\n(function (EventType) {\n    EventType[\"AccountChanged\"] = \"accountChanged\";\n    EventType[\"AccountDisconnected\"] = \"accountDisconnected\";\n    EventType[\"ChainChanged\"] = \"chainChanged\";\n})(EventType || (EventType = {}));\nexport var SchemaType;\n(function (SchemaType) {\n    SchemaType[\"Module\"] = \"module\";\n    SchemaType[\"Parameter\"] = \"parameter\";\n})(SchemaType || (SchemaType = {}));\n", "/**\n * Detect the Concordium browser wallet API by waiting for it to have been successfully injected\n * into the window so that it is ready for use.\n * @param timeout determines how long to wait before rejecting if the Concordium provider is not available, in milliseconds.\n * @returns a promise containing the Concordium Wallet provider API.\n */\nexport async function detectConcordiumProvider(timeout = 5000) {\n    return new Promise((resolve, reject) => {\n        if (window.concordium) {\n            resolve(window.concordium);\n        }\n        else {\n            const t = setTimeout(() => {\n                if (window.concordium) {\n                    resolve(window.concordium);\n                }\n                else {\n                    reject();\n                }\n            }, timeout);\n            window.addEventListener('concordium#initialized', () => {\n                if (window.concordium) {\n                    clearTimeout(t);\n                    resolve(window.concordium);\n                }\n            }, { once: true });\n        }\n    });\n}\n"],
  "mappings": ";AAGO,IAAI;AAAA,CACV,SAAUA,YAAW;AAClB,EAAAA,WAAU,gBAAgB,IAAI;AAC9B,EAAAA,WAAU,qBAAqB,IAAI;AACnC,EAAAA,WAAU,cAAc,IAAI;AAChC,GAAG,cAAc,YAAY,CAAC,EAAE;AACzB,IAAI;AAAA,CACV,SAAUC,aAAY;AACnB,EAAAA,YAAW,QAAQ,IAAI;AACvB,EAAAA,YAAW,WAAW,IAAI;AAC9B,GAAG,eAAe,aAAa,CAAC,EAAE;;;ACPlC,eAAsB,yBAAyB,UAAU,KAAM;AAC3D,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,QAAI,OAAO,YAAY;AACnB,cAAQ,OAAO,UAAU;AAAA,IAC7B,OACK;AACD,YAAM,IAAI,WAAW,MAAM;AACvB,YAAI,OAAO,YAAY;AACnB,kBAAQ,OAAO,UAAU;AAAA,QAC7B,OACK;AACD,iBAAO;AAAA,QACX;AAAA,MACJ,GAAG,OAAO;AACV,aAAO,iBAAiB,0BAA0B,MAAM;AACpD,YAAI,OAAO,YAAY;AACnB,uBAAa,CAAC;AACd,kBAAQ,OAAO,UAAU;AAAA,QAC7B;AAAA,MACJ,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,IACrB;AAAA,EACJ,CAAC;AACL;",
  "names": ["EventType", "SchemaType"]
}
